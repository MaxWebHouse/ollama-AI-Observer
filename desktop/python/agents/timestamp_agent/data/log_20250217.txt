[14:34:51] === BEGIN COT BLOCK ===
[14:34:51] === PROMPT ===
[14:34:51] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:34:51] Your task is to:
[14:34:51] 1. Analyze the current screen content
[14:34:51] 2. Determine if the user's activity has changed from the last recorded activity
[14:34:51] 3. Write a concise description of any new activity
[14:34:51] Available commands:
[14:34:51] WRITE_ACTIVITY: activity_description
[14:34:51] READ_LAST_ACTIVITY: None
[14:34:51] Guidelines for activity descriptions:
[14:34:51] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:34:51] - Focus on the main activity visible on screen
[14:34:51] - Include the application name when relevant
[14:34:51] - Don't include temporary or quick changes
[14:34:51] - Group similar activities together
[14:34:51] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:34:51] === SCREEN CONTENT ===
[14:34:51] jay@Qunix Observer % git push
[14:34:51] Enumerating objects: 60, done.
[14:34:51] Counting objects: 100% (60/60), done.
[14:34:51] Delta compression using up to 16 je @@ Observer
[14:34:51] Compressing objects: 100% (31/31)
[14:34:51] Writing objects: 100% (31/31), 22)
[14:34:51] Total 31 (delta 10), reused @ (de Observer
[14:34:51] remote: Resolving deltas: 100% (1!
[14:34:51] To https://github.com/Roy3838/0bs| 10.0.0.72:11434 v Connected
[14:34:51] 14f1004..13fc24a main -> main
[14:34:51] jay@Qunix Observer % cd desktop
[14:34:51] jay@Qunix desktop % ls
[14:34:51] app—icon.png index.htm
[14:34:51] dist node_modu
[14:34:51] index.css
[14:34:51] jay@Qunix desktop
[14:34:51] jay@Qunix desktop
[14:34:51] jay@Qunix desktop
[14:34:51] jay@Qunix desktop
[14:34:51] j ay@Qunix des ktop nvim s rc/ LogV Model: deepseek-r1:8b Model: deepseek-r1:8b
[14:34:51] j ay@Qu nix deskt op Tracks all activity Tracks the CLI commands you use
[14:34:51] jay@Qunix desktop % npm run build
[14:34:51] G Active Agents: 0 / Total: 3
[14:34:51] SimpleActivityAgent CommandTrackingAgent
[14:34:51] stopped stopped
[14:34:51] > @observer/desktop@d.1.@ build
[14:34:51] > t sc && vite bu ild Y Show Logs \ Show CoT Y Show Logs \ Show CoT
[14:34:51] vite v6.1.0 building for producti
[14:34:51] Y 1591 modules transformed.
[14:34:51] dist/index. html TimestampA gent
[14:34:51] dist/assets/
[14:34:51] dist/assets/index—au66u2rl.js
[14:34:51] vy built in 1.68s
[14:34:51] jay@Qunix desktop % npm run tauri Model: deepseek-r1:7b
[14:34:51] Records all user activity on a file
[14:34:51] stopped
[14:34:51] > @observer/desktop@d.1.@ tauri
[14:34:51] > tauri dev
[14:34:51] Running DevCommand (‘cargo r| A nias tgs || V show cor ||
[14:34:51] Info Watching /Users/jay/repo
[14:34:51] Compiling observer vQ@.1.0 (/Us
[14:34:51] Finished ‘dev’ profile [unopt
[14:34:51] Running ‘target/debug/observ
[14:34:51] No logs available
[14:34:51] AC
[14:34:51] jay@Qunix desktop
[14:34:51] jay@Qunix desktop
[14:34:51] jay@Qunix desktop
[14:34:51] jay@Qunix desktop % npm run tauri
[14:34:51] > @observer/desktop@d.1.@ tauri
[14:34:51] > tauri dev
[14:34:51] Running DevCommand (‘cargo run --no-default-features -—-color always ——)
[14:34:51] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:34:51] Finished ‘dev’ profile [unoptimized + debuginfo] target(s) in @.29s
[14:34:51] Running ‘target/debug/observer~
[14:34:51] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10a40b950>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:34:55] === BEGIN COT BLOCK ===
[14:34:55] === PROMPT ===
[14:34:55] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:34:55] Your task is to:
[14:34:55] 1. Analyze the current screen content
[14:34:55] 2. Determine if the user's activity has changed from the last recorded activity
[14:34:55] 3. Write a concise description of any new activity
[14:34:55] Available commands:
[14:34:55] WRITE_ACTIVITY: activity_description
[14:34:55] READ_LAST_ACTIVITY: None
[14:34:55] Guidelines for activity descriptions:
[14:34:55] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:34:55] - Focus on the main activity visible on screen
[14:34:55] - Include the application name when relevant
[14:34:55] - Don't include temporary or quick changes
[14:34:55] - Group similar activities together
[14:34:55] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:34:55] === SCREEN CONTENT ===
[14:34:55] jay@Qunix Observer % git push
[14:34:55] Enumerating objects: 60, done.
[14:34:55] Counting objects: 100% (60/60), done.
[14:34:55] Delta compression using up to 16 je @@ Observer
[14:34:55] Compressing objects: 100% (31/31)
[14:34:55] Writing objects: 100% (31/31), 22)
[14:34:55] Total 31 (delta 10), reused @ (de Observer
[14:34:55] remote: Resolving deltas: 100% (1!
[14:34:55] To https://github.com/Roy3838/0bs| 10.0.0.72:11434 v Connected
[14:34:55] 14f1004..13fc24a main -> main
[14:34:55] jay@Qunix Observer % cd desktop
[14:34:55] jay@Qunix desktop % ls
[14:34:55] app—icon.png index.htm
[14:34:55] dist node_modu
[14:34:55] index.css
[14:34:55] jay@Qunix desktop
[14:34:55] jay@Qunix desktop
[14:34:55] jay@Qunix desktop
[14:34:55] jay@Qunix desktop
[14:34:55] j ay@Qunix des ktop nvim s rc/ LogV Model: deepseek-r1:8b Model: deepseek-r1:8b
[14:34:55] j ay@Qu nix deskt op Tracks all activity Tracks the CLI commands you use
[14:34:55] jay@Qunix desktop % npm run build
[14:34:55] G Active Agents: 1 / Total: 3
[14:34:55] SimpleActivityAgent CommandTrackingAgent
[14:34:55] stopped stopped
[14:34:55] > @observer/desktop@d.1.@ build
[14:34:55] > t sc && vite bu ild Y Show Logs \ Show CoT Y Show Logs \ Show CoT
[14:34:55] vite v6.1.0 building for producti
[14:34:55] Y 1591 modules transformed.
[14:34:55] dist/index. html TimestampA gent
[14:34:55] dist/assets/
[14:34:55] dist/assets/index—au66u2rl.js
[14:34:55] vy built in 1.68s
[14:34:55] jay@Qunix desktop % npm run tauri Model: deepseek-r1:7b
[14:34:55] Records all user activity on a file
[14:34:55] running
[14:34:55] > @observer/desktop@d.1.@ tauri
[14:34:55] Running DevCommand (‘cargo rj : la
[14:34:55] Info Watching /Users/jay/repo| A bisetoas || Showtet |L&
[14:34:55] Compiling observer v@.1.@ (/Us| No logs available
[14:34:55] Finished ‘dev’ profile [unopt
[14:34:55] Running ‘target/debug/observ
[14:34:55] “C
[14:34:55] jay@Qunix desktop
[14:34:55] jay@Qunix desktop
[14:34:55] jay@Qunix desktop
[14:34:55] jay@Qunix desktop % npm run tauri
[14:34:55] > @observer/desktop@d.1.@ tauri
[14:34:55] > tauri dev
[14:34:55] Running DevCommand (‘cargo run --no-default-features -—-color always ——)
[14:34:55] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:34:55] Finished ‘dev’ profile [unoptimized + debuginfo] target(s) in @.29s
[14:34:55] Running ‘target/debug/observer~
[14:34:55] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x120e8a750>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:04] === BEGIN COT BLOCK ===
[14:35:04] === PROMPT ===
[14:35:04] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:35:04] Your task is to:
[14:35:04] 1. Analyze the current screen content
[14:35:04] 2. Determine if the user's activity has changed from the last recorded activity
[14:35:04] 3. Write a concise description of any new activity
[14:35:04] Available commands:
[14:35:04] WRITE_ACTIVITY: activity_description
[14:35:04] READ_LAST_ACTIVITY: None
[14:35:04] Guidelines for activity descriptions:
[14:35:04] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:35:04] - Focus on the main activity visible on screen
[14:35:04] - Include the application name when relevant
[14:35:04] - Don't include temporary or quick changes
[14:35:04] - Group similar activities together
[14:35:04] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:35:04] === SCREEN CONTENT ===
[14:35:04] return {"status": "“updated"}
[14:35:04] except Exception as e:
[14:35:04] logger.error(f"Error updating agent config: {e}")
[14:35:04] return {"error": f"Failed to update agent configuration: {str(e)}"}
[14:35:04] 337 @app.get("/agents/{agent_id}/logs")
[14:35:04] async def get_agent_logs(agent_id: str, days: int = 1):
[14:35:04] """Get agent logs for the specified number of past days"™""
[14:35:04] try:
[14:35:04] # Calculate the date range
[14:35:04] end_date = datetime.now()
[14:35:04] start_date = end_date — timedelta(days=days)
[14:35:04] # Get the agent's data directory
[14:35:04] agent_dir = Path(__file__).parent / "agents" / agent_id / "data"
[14:35:04] if not agent_dir.exists():
[14:35:04] return {"error": "Agent logs directory not found"}
[14:35:04] # Find all log files in the date range
[14:35:04] log_files = []
[14:35:04] for date in (start_date + timedelta(n) for n in range(days + 1)):
[14:35:04] log_file = agent_dir / f"log_{date.strftime('%sY%m%d')}.txt"
[14:35:04] if log_file.exists():
[14:35:04] log_files.append(log_file)
[14:35:04] # Read and parse logs
[14:35:04] logs = []
[14:35:04] current_timestamp = None
[14:35:04] think_content = []
[14:35:04] recording_think = False
[14:35:04] for log_file in log_files:
[14:35:04] with open(log_file, 'r') as f:
[14:35:04] content = f.read()
[14:35:04] # Find all timestamp lines and their positions
[14:35:04] timestamp_matches = list(re.finditer(r'\[([\d:]+)\]', content) )
[14:35:04] for i, match in enumerate(timestamp_matches) :
[14:35:04] timestamp = match.group(1)
[14:35:04] start_pos = match.end()
[14:35:04] end_pos = timestamp_matches[i + 1].start() if i + 1 < len(timestamp_mat
[14:35:04] ches) else len(content)
[14:35:04] # Get the text block for this timestamp
[14:35:04] block = content [start_pos:end_pos] .strip()
[14:35:04] # Check if this block contains any think tags
[14:35:04] think_match = re.search(r'<think>(.*?)</think>', block, re.DOTALL)
[14:35:04] if think_match:
[14:35:04] logs.append({
[14:35:04] "timestamp': timestamp,
[14:35:04] 'message': think_match.group(1).strip(),
[14:35:04] "type': ‘cot’
[14:35:04] })
[14:35:04] =zsh
[14:35:04] "api.py" 403L, 14785B written
[14:35:04] nection.HTTPConnection object at @x10a40@b950>: Failed to establish a new conne
[14:35:04] ction: [Errno 61] Connection refused'))
[14:35:04] 2025-02-17 14:34:52,099 — DEBUG — Incoming request from origin: http://127.0.0
[14:35:04] .1:1430
[14:35:04] 2025-02-17 14:34:52,099 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:35:04] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:35:04] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:04] etch-site': 'cross-site', 'user—agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:04] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:04] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:04] 2025-02-17 14:34:52,101 - DEBUG - Response headers: MutableHeaders({'content-1l
[14:35:04] ength': '2', ‘content-type': ‘application/json', ‘access—control—allow-credent
[14:35:04] jials': 'true', 'access—control-expose-headers': 'x*', ‘access—control-allow-ori
[14:35:04] gin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:04] INFO: 127.0.0.1:49582 — "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:04] 200 OK
[14:35:04] 2025-02-17 14:34:52,409 — DEBUG — STREAM b'IHDR' 16 13
[14:35:04] 2025-02-17 14:34:52,409 — DEBUG -— STREAM b'IDAT' 41 531881
[14:35:04] 2025-02-17 14:34:53,170 — DEBUG - ['tesseract', '/var/folders/d4/t8w2dg017r155
[14:35:04] blc2p4kk3800000gn/T/tess_uecugox6_input.PNG', '/var/folders/d4/t8w2dg@17r155bl
[14:35:04] c2p4kk3800000gn/T/tess_uecugox6', ‘'txt']
[14:35:04] 2025-02-17 14:34:54,100 — DEBUG — Incoming request from origin: http://127.0.0
[14:35:04] .1:1430
[14:35:04] 2025-02-17 14:34:54,100 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:35:04] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:35:04] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:04] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:04] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:04] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:04] 2025-02-17 14:34:54,102 - DEBUG - Response headers: MutableHeaders({'content-1
[14:35:04] ength': '2', ‘content-type': ‘application/json', ‘access—control—allow-credent
[14:35:04] jials': 'true', 'access—control-expose-headers': 'x*', ‘access—control-allow-ori
[14:35:04] gin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:04] INFO: 127.0.0.1:49582 — "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:04] 200 OK
[14:35:04] 2025-02-17 14:34:55,744 - DEBUG - Starting new HTTP connection (1): localhost:
[14:35:04] 11434
[14:35:04] Generation error: HTTPConnectionPool(host='localhost', port=11434): Max retrie
[14:35:04] s exceeded with url: /api/generate (Caused by NewConnectionError( '<urllib3.con
[14:35:04] nection.HTTPConnection object at @x12@e8a750>: Failed to establish a new conne
[14:35:04] ction: [Errno 61] Connection refused'))
[14:35:04] 2025-02-17 14:34:56,101 — DEBUG — Incoming request from origin: http://127.0.0
[14:35:04] .1:1430
[14:35:04] 2025-02-17 14:34:56,101 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:35:04] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:35:04] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:04] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:04] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:04] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:04] 2025-02-17 14:34:56,103 - DEBUG - Response headers: MutableHeaders({'content-1
[14:35:04] ength': '2', ‘content-type': ‘application/json', ‘access—control—allow-credent
[14:35:04] jials': 'true', 'access—control-expose-headers': 'x*', ‘access—control-allow-ori
[14:35:04] gin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:04] INFO: 127.0.0.1:49582 — "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:04] 200 OK
[14:35:04] Gl python @ 100 =
[14:35:04] i
[14:35:04] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x122bc0230>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:12] === BEGIN COT BLOCK ===
[14:35:12] === PROMPT ===
[14:35:12] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:35:12] Your task is to:
[14:35:12] 1. Analyze the current screen content
[14:35:12] 2. Determine if the user's activity has changed from the last recorded activity
[14:35:12] 3. Write a concise description of any new activity
[14:35:12] Available commands:
[14:35:12] WRITE_ACTIVITY: activity_description
[14:35:12] READ_LAST_ACTIVITY: None
[14:35:12] Guidelines for activity descriptions:
[14:35:12] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:35:12] - Focus on the main activity visible on screen
[14:35:12] - Include the application name when relevant
[14:35:12] - Don't include temporary or quick changes
[14:35:12] - Group similar activities together
[14:35:12] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:35:12] === SCREEN CONTENT ===
[14:35:12] return {"status": "“updated"}
[14:35:12] except Exception as e:
[14:35:12] logger.error(f"Error updating agent config: {e}")
[14:35:12] return {"error": f"Failed to update agent configuration: {str(e)}"}
[14:35:12] 337 @app.get("/agents/{agent_id}/logs")
[14:35:12] async def get_agent_logs(agent_id: str, days: int = 1):
[14:35:12] """Get agent logs for the specified number of past days"™""
[14:35:12] try:
[14:35:12] # Calculate the date range
[14:35:12] end_date = datetime.now()
[14:35:12] start_date = end_date — timedelta(days=days)
[14:35:12] # Get the agent's data directory
[14:35:12] agent_dir = Path(__file__).parent / "agents" / agent_id / "data"
[14:35:12] if not agent_dir.exists():
[14:35:12] return {"error": "Agent logs directory not found"}
[14:35:12] # Find all log files in the date range
[14:35:12] log_files = []
[14:35:12] for date in (start_date + timedelta(n) for n in range(days + 1)):
[14:35:12] log_file = agent_dir / f"log_{date.strftime('%sY%m%d')}.txt"
[14:35:12] if log_file.exists():
[14:35:12] log_files.append(log_file)
[14:35:12] # Read and parse logs
[14:35:12] logs = []
[14:35:12] current_timestamp = None
[14:35:12] think_content = []
[14:35:12] recording_think = False
[14:35:12] for log_file in log_files:
[14:35:12] with open(log_file, 'r') as f:
[14:35:12] content = f.read()
[14:35:12] # Find all timestamp lines and their positions
[14:35:12] timestamp_matches = list(re.finditer(r'\[([\d:]+)\]', content) )
[14:35:12] for i, match in enumerate(timestamp_matches) :
[14:35:12] timestamp = match.group(1)
[14:35:12] start_pos = match.end()
[14:35:12] end_pos = timestamp_matches[i + 1].start() if i + 1 < len(timestamp_mat
[14:35:12] ches) else len(content)
[14:35:12] # Get the text block for this timestamp
[14:35:12] block = content [start_pos:end_pos] .strip()
[14:35:12] # Check if this block contains any think tags
[14:35:12] think_match = re.search(r'<think>(.*?)</think>', block, re.DOTALL)
[14:35:12] if think_match:
[14:35:12] logs.append({
[14:35:12] "timestamp': timestamp,
[14:35:12] 'message': think_match.group(1).strip(),
[14:35:12] "type': ‘cot’
[14:35:12] })
[14:35:12] =zsh
[14:35:12] "api.py" 403L, 14785B written
[14:35:12] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:12] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:12] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:12] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:12] 2025-02-17 14:34:54,102 - DEBUG - Response headers: MutableHeaders({'content-1
[14:35:12] ength': '2', ‘content-type': ‘application/json', ‘access—control—allow-credent
[14:35:12] jials': 'true', 'access—control-expose-headers': 'x*', ‘access—control-allow-ori
[14:35:12] gin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:12] INFO: 127.0.0.1:49582 — "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:12] 200 OK
[14:35:12] 2025-02-17 14:34:55,744 - DEBUG - Starting new HTTP connection (1): localhost:
[14:35:12] 11434
[14:35:12] Generation error: HTTPConnectionPool(host='localhost', port=11434): Max retrie
[14:35:12] s exceeded with url: /api/generate (Caused by NewConnectionError( '<urllib3.con
[14:35:12] nection.HTTPConnection object at @x12@e8a750>: Failed to establish a new conne
[14:35:12] ction: [Errno 61] Connection refused'))
[14:35:12] 2025-02-17 14:34:56,101 — DEBUG — Incoming request from origin: http://127.0.0
[14:35:12] .1:1430
[14:35:12] 2025-02-17 14:34:56,101 — DEBUG - Request headers: Headers({'host': ‘localhost
[14:35:12] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:35:12] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:12] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:12] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:12] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:12] 2025-02-17 14:34:56,103 - DEBUG - Response headers: MutableHeaders({'content-1
[14:35:12] ength': '2', ‘content-type': ‘application/json', ‘access—control—allow-credent
[14:35:12] jials': 'true', 'access—control-expose-headers': 'x*', ‘access—control-allow-ori
[14:35:12] gin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:12] INFO: 127.0.0.1:49582 — "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:12] 200 OK
[14:35:12] 2025-02-17 14:34:57,085 — DEBUG — STREAM b'IHDR' 16 13
[14:35:12] 2025-02-17 14:34:57,085 — DEBUG — STREAM b'IDAT' 41 797649
[14:35:12] 2025-02-17 14:34:57,936 — DEBUG - ['tesseract', '/var/folders/d4/t8w2dg017r155
[14:35:12] blc2p4kk3800000gn/T/tess_dtngexjt_input.PNG', '/var/folders/d4/t8w2dg@17r155bl
[14:35:12] c2p4kk3800000gn/T/tess_dtngexjt', ‘txt']
[14:35:12] 2025-02-17 14:34:58,102 — DEBUG — Incoming request from origin: http://127.0.0
[14:35:12] .1:1430
[14:35:12] 2025-02-17 14:34:58,102 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:35:12] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:35:12] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:12] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:12] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:12] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:12] 2025-02-17 14:34:58,104 - DEBUG - Response headers: MutableHeaders({'content-1
[14:35:12] ength': '2', ‘content-type': ‘application/json', ‘access—control—allow-credent
[14:35:12] jials': 'true', 'access—control-expose-headers': 'x*', ‘access—control-allow-ori
[14:35:12] gin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:12] INFO: 127.0.0.1:49582 — "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:12] 200 OK
[14:35:12] 2025-02-17 14:35:04,120 — DEBUG - Starting new HTTP connection (1): localhost:
[14:35:12] 11434
[14:35:12] Generation error: HTTPConnectionPool(host='localhost', port=11434): Max retrie
[14:35:12] s exceeded with url: /api/generate (Caused by NewConnectionError( '<urllib3.con
[14:35:12] nection.HTTPConnection object at @x122bc@230>: Failed to establish a new conne
[14:35:12] ction: [Errno 61] Connection refused'))
[14:35:12] Gl python @ 100 =
[14:35:12] i
[14:35:12] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x120e8ac30>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:17] === BEGIN COT BLOCK ===
[14:35:17] === PROMPT ===
[14:35:17] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:35:17] Your task is to:
[14:35:17] 1. Analyze the current screen content
[14:35:17] 2. Determine if the user's activity has changed from the last recorded activity
[14:35:17] 3. Write a concise description of any new activity
[14:35:17] Available commands:
[14:35:17] WRITE_ACTIVITY: activity_description
[14:35:17] READ_LAST_ACTIVITY: None
[14:35:17] Guidelines for activity descriptions:
[14:35:17] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:35:17] - Focus on the main activity visible on screen
[14:35:17] - Include the application name when relevant
[14:35:17] - Don't include temporary or quick changes
[14:35:17] - Group similar activities together
[14:35:17] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:35:17] === SCREEN CONTENT ===
[14:35:17] jay@Qunix Observer % git push
[14:35:17] Enumerating objects: 60, done.
[14:35:17] Counting objects: 100% (60/60), done.
[14:35:17] Delta compression using up to 16 je @@ Observer
[14:35:17] Compressing objects: 100% (31/31)
[14:35:17] Writing objects: 100% (31/31), 22)
[14:35:17] Total 31 (delta 10), reused @ (de Observer
[14:35:17] remote: Resolving deltas: 100% (1!
[14:35:17] To https://github.com/Roy3838/0bs| 10.0.0.72:11434 v Connected
[14:35:17] 14f1004..13fc24a main -> main
[14:35:17] jay@Qunix Observer % cd desktop
[14:35:17] jay@Qunix desktop % ls
[14:35:17] app—icon.png index.htm
[14:35:17] dist node_modu
[14:35:17] index.css
[14:35:17] jay@Qunix desktop
[14:35:17] jay@Qunix desktop
[14:35:17] jay@Qunix desktop
[14:35:17] jay@Qunix desktop
[14:35:17] j ay@Qunix des ktop nvim s rc/ LogV Model: deepseek-r1:8b Model: deepseek-r1:8b
[14:35:17] j ay@Qu nix deskt op Tracks all activity Tracks the CLI commands you use
[14:35:17] jay@Qunix desktop % npm run build
[14:35:17] G Active Agents: 1 / Total: 3
[14:35:17] SimpleActivityAgent CommandTrackingAgent
[14:35:17] stopped stopped
[14:35:17] > @observer/desktop@d.1.@ build
[14:35:17] > t sc && vite bu ild Y Show Logs \ Show CoT Y Show Logs \ Show CoT
[14:35:17] vite v6.1.0 building for producti
[14:35:17] Y 1591 modules transformed.
[14:35:17] dist/index. html TimestampA gent
[14:35:17] dist/assets/
[14:35:17] dist/assets/index—au66u2rl.js
[14:35:17] vy built in 1.68s
[14:35:17] jay@Qunix desktop % npm run tauri Model: deepseek-r1:7b
[14:35:17] Records all user activity on a file
[14:35:17] running
[14:35:17] > @observer/desktop@d.1.@ tauri
[14:35:17] Running DevCommand (‘cargo rj : la
[14:35:17] Info Watching /Users/jay/repo| A bisetoas || Showtet |L&
[14:35:17] Compiling observer v@.1.@ (/Us| No logs available
[14:35:17] Finished ‘dev’ profile [unopt
[14:35:17] Running ‘target/debug/observ
[14:35:17] “C
[14:35:17] jay@Qunix desktop
[14:35:17] jay@Qunix desktop
[14:35:17] jay@Qunix desktop
[14:35:17] jay@Qunix desktop % npm run tauri
[14:35:17] > @observer/desktop@d.1.@ tauri
[14:35:17] > tauri dev
[14:35:17] Running DevCommand (‘cargo run --no-default-features -—-color always ——)
[14:35:17] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:35:17] Finished ‘dev’ profile [unoptimized + debuginfo] target(s) in @.29s
[14:35:17] Running ‘target/debug/observer~
[14:35:17] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x120e8a4b0>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:26] === BEGIN COT BLOCK ===
[14:35:26] === PROMPT ===
[14:35:26] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:35:26] Your task is to:
[14:35:26] 1. Analyze the current screen content
[14:35:26] 2. Determine if the user's activity has changed from the last recorded activity
[14:35:26] 3. Write a concise description of any new activity
[14:35:26] Available commands:
[14:35:26] WRITE_ACTIVITY: activity_description
[14:35:26] READ_LAST_ACTIVITY: None
[14:35:26] Guidelines for activity descriptions:
[14:35:26] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:35:26] - Focus on the main activity visible on screen
[14:35:26] - Include the application name when relevant
[14:35:26] - Don't include temporary or quick changes
[14:35:26] - Group similar activities together
[14:35:26] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:35:26] === SCREEN CONTENT ===
[14:35:26] return {"status": "“updated"}
[14:35:26] except Exception as e:
[14:35:26] logger.error(f"Error updating agent config: {e}")
[14:35:26] return {"error": f"Failed to update agent configuration: {str(e)}"}
[14:35:26] 337 @app.get("/agents/{agent_id}/logs")
[14:35:26] async def get_agent_logs(agent_id: str, days: int = 1):
[14:35:26] """Get agent logs for the specified number of past days"™""
[14:35:26] try:
[14:35:26] # Calculate the date range
[14:35:26] end_date = datetime.now()
[14:35:26] start_date = end_date — timedelta(days=days)
[14:35:26] # Get the agent's data directory
[14:35:26] agent_dir = Path(__file__).parent / "agents" / agent_id / "data"
[14:35:26] if not agent_dir.exists():
[14:35:26] return {"error": "Agent logs directory not found"}
[14:35:26] # Find all log files in the date range
[14:35:26] log_files = []
[14:35:26] for date in (start_date + timedelta(n) for n in range(days + 1)):
[14:35:26] log_file = agent_dir / f"log_{date.strftime('%sY%m%d')}.txt"
[14:35:26] if log_file.exists():
[14:35:26] log_files.append(log_file)
[14:35:26] # Read and parse logs
[14:35:26] logs = []
[14:35:26] current_timestamp = None
[14:35:26] think_content = []
[14:35:26] recording_think = False
[14:35:26] for log_file in log_files:
[14:35:26] with open(log_file, 'r') as f:
[14:35:26] content = f.read()
[14:35:26] # Find all timestamp lines and their positions
[14:35:26] timestamp_matches = list(re.finditer(r'\[([\d:]+)\]', content) )
[14:35:26] for i, match in enumerate(timestamp_matches) :
[14:35:26] timestamp = match.group(1)
[14:35:26] start_pos = match.end()
[14:35:26] end_pos = timestamp_matches[i + 1].start() if i + 1 < len(timestamp_mat
[14:35:26] ches) else len(content)
[14:35:26] # Get the text block for this timestamp
[14:35:26] block = content [start_pos:end_pos] .strip()
[14:35:26] # Check if this block contains any think tags
[14:35:26] think_match = re.search(r'<think>(.*?)</think>', block, re.DOTALL)
[14:35:26] if think_match:
[14:35:26] logs.append({
[14:35:26] "timestamp': timestamp,
[14:35:26] 'message': think_match.group(1).strip(),
[14:35:26] "type': ‘cot’
[14:35:26] })
[14:35:26] =zsh
[14:35:26] "api.py" 403L, 14785B written
[14:35:26] nection.HTTPConnection object at @x12@e8ac30>: Failed to establish a new conne
[14:35:26] ction: [Errno 61] Connection refused'))
[14:35:26] 2025-02-17 14:35:13,535 — DEBUG — Incoming request from origin: http://127.0.0
[14:35:26] .1:1430
[14:35:26] 2025-02-17 14:35:13,535 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:35:26] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:35:26] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:26] etch-site': 'cross-site', 'user—agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:26] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:26] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:26] 2025-02-17 14:35:13,540 - DEBUG - Response headers: MutableHeaders({'content-1
[14:35:26] ength': '113', ‘content-type': ‘application/json', ‘access—control—allow-crede
[14:35:26] ntials': 'true', 'access—control—expose-headers': '*', 'access—control-—allow-o
[14:35:26] rigin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:26] INFO: 127.0.0.1:49590 —- "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:26] 200 OK
[14:35:26] 2025-02-17 14:35:14,156 -— DEBUG — STREAM b'IHDR' 16 13
[14:35:26] 2025-02-17 14:35:14,156 — DEBUG — STREAM b'IDAT' 41 531872
[14:35:26] 2025-02-17 14:35:15,096 — DEBUG - ['tesseract', '/var/folders/d4/t8w2dg017r155
[14:35:26] blc2p4kk3800000@gn/T/tess_jim@m6jb_input.PNG', '/var/folders/d4/t8w2dg017r155bl
[14:35:26] c2p4kk3800000gn/T/tess_jim@m6jb', ‘txt']
[14:35:26] 2025-02-17 14:35:15,538 — DEBUG — Incoming request from origin: http://127.0.0
[14:35:26] .1:1430
[14:35:26] 2025-02-17 14:35:15,538 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:35:26] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:35:26] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:26] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:26] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:26] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:26] 2025-02-17 14:35:15,541 - DEBUG - Response headers: MutableHeaders({'content-1
[14:35:26] ength': '113', ‘content-type': ‘application/json', ‘access—control—allow-crede
[14:35:26] ntials': 'true', 'access—control—expose-headers': '*', 'access—control-—allow-o
[14:35:26] rigin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:26] INFO: 127.0.0.1:49590 —- "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:26] 200 OK
[14:35:26] 2025-02-17 14:35:17,538 — DEBUG — Incoming request from origin: http://127.0.0
[14:35:26] .1:1430
[14:35:26] 2025-02-17 14:35:17,538 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:35:26] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:35:26] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:35:26] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:35:26] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:35:26] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:35:26] 2025-02-17 14:35:17,540 - DEBUG - Response headers: MutableHeaders({'content-1l
[14:35:26] ength': '113', ‘content-type': ‘application/json', ‘access—control—allow-crede
[14:35:26] ntials': 'true', 'access—control—expose-headers': '*', 'access—control-—allow-o
[14:35:26] rigin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:35:26] INFO: 127.0.0.1:49590 —- "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:35:26] 200 OK
[14:35:26] 2025-02-17 14:35:17,638 -— DEBUG - Starting new HTTP connection (1): localhost:
[14:35:26] 11434
[14:35:26] Generation error: HTTPConnectionPool(host='localhost', port=11434): Max retrie
[14:35:26] s exceeded with url: /api/generate (Caused by NewConnectionError( '<urllib3.con
[14:35:26] nection.HTTPConnection object at @x12@e8a4b@>: Failed to establish a new conne
[14:35:26] ction: [Errno 61] Connection refused'))
[14:35:26] Gl python @ 100 =
[14:35:26] i
[14:35:26] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x120e8ab10>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:31] === BEGIN COT BLOCK ===
[14:35:31] === PROMPT ===
[14:35:31] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:35:31] Your task is to:
[14:35:31] 1. Analyze the current screen content
[14:35:31] 2. Determine if the user's activity has changed from the last recorded activity
[14:35:31] 3. Write a concise description of any new activity
[14:35:31] Available commands:
[14:35:31] WRITE_ACTIVITY: activity_description
[14:35:31] READ_LAST_ACTIVITY: None
[14:35:31] Guidelines for activity descriptions:
[14:35:31] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:35:31] - Focus on the main activity visible on screen
[14:35:31] - Include the application name when relevant
[14:35:31] - Don't include temporary or quick changes
[14:35:31] - Group similar activities together
[14:35:31] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:35:31] === SCREEN CONTENT ===
[14:35:31] la
[14:35:31] ee@ npm run tauri dev
[14:35:31] remote: Resolving deltas: 100% (10/10), completed with 1@ local objects.
[14:35:31] To https://github. com/Roy3838/0bserver.git
[14:35:31] 14f1004..13fc24a main -> main
[14:35:31] jay@Qunix Observer % cd desktop
[14:35:31] jay@Qunix desktop % ls
[14:35:31] app-icon.png index.html package. json src
[14:35:31] dist node_modules public src—tauri
[14:35:31] index.css package-lock. json python tailwind.config.js
[14:35:31] nvim python/core/base_agent.py
[14:35:31] nvim python/api.py
[14:35:31] jay@Qunix desktop %
[14:35:31] jay@Qunix desktop %
[14:35:31] jay@Qunix desktop %
[14:35:31] jay@Qunix desktop %
[14:35:31] jay@Qunix desktop %
[14:35:31] jay@Qunix desktop %
[14:35:31] jay@Qunix desktop %
[14:35:31] nvim src/LogViewer.tsx
[14:35:31] npm run build
[14:35:31] > @observer/desktop@d.1.@ build
[14:35:31] > tsc && vite build
[14:35:31] vite v6.1.0 building for production...
[14:35:31] vy 1591 modules transformed.
[14:35:31] dist/index.html @.47 kB | gzip: @.3@ kB
[14:35:31] dist/assets/index—B9dsNGM7.css 6.31 kB | gzip: 1.70 kB
[14:35:31] dist/assets/index—au66u2rl.js 155.36 kB | gzip: 49.76 kB
[14:35:31] vy built in 1.68s
[14:35:31] jay@Qunix desktop % npm run tauri dev
[14:35:31] > @observer/desktop@d.1.@ tauri
[14:35:31] > tauri dev
[14:35:31] Running DevCommand (‘cargo run --no-default-features --color always —-*)
[14:35:31] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:35:31] Compiling observer v@.1.@ (/Users/jay/repos/Observer/desktop/src-tauri)
[14:35:31] Finished ‘dev’ profile [unoptimized + debuginfo] target(s) in 5.34s
[14:35:31] Running ‘target/debug/observer’
[14:35:31] AC
[14:35:31] jay@Qunix desktop % nvim python/core/base_agent.py
[14:35:31] jay@Qunix desktop %
[14:35:31] jay@Qunix desktop %
[14:35:31] jay@Qunix desktop % npm run tauri dev
[14:35:31] > @observer/desktop@d.1.@ tauri
[14:35:31] > tauri dev
[14:35:31] Running DevCommand (‘cargo run --no-default-features --color always —-*)
[14:35:31] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:35:31] Finished ‘dev’ profile [unoptimized + debuginfo] target(s) in @.29s
[14:35:31] Running ‘target/debug/observer’
[14:35:31] jay@Qunix desktop % npm run tauri dev
[14:35:31] > @observer/desktop@d.1.@ tauri
[14:35:31] > tauri dev
[14:35:31] Running DevCommand (‘cargo run --no-default-features --color always —-*)
[14:35:31] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:35:31] tsconfig.json
[14:35:31] tsconfig.node. json
[14:35:31] vite.config.ts
[14:35:31] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x122bc1820>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:36] === BEGIN COT BLOCK ===
[14:35:36] === PROMPT ===
[14:35:36] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:35:36] Your task is to:
[14:35:36] 1. Analyze the current screen content
[14:35:36] 2. Determine if the user's activity has changed from the last recorded activity
[14:35:36] 3. Write a concise description of any new activity
[14:35:36] Available commands:
[14:35:36] WRITE_ACTIVITY: activity_description
[14:35:36] READ_LAST_ACTIVITY: None
[14:35:36] Guidelines for activity descriptions:
[14:35:36] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:35:36] - Focus on the main activity visible on screen
[14:35:36] - Include the application name when relevant
[14:35:36] - Don't include temporary or quick changes
[14:35:36] - Group similar activities together
[14:35:36] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:35:36] === SCREEN CONTENT ===
[14:35:36] 14f1004..13fc24a main -> main
[14:35:36] jay@Qunix Observer % cd desktop
[14:35:36] jay@Qunix desktop % ls
[14:35:36] app—icon.png index.html package. json src tsconfig.json
[14:35:36] dist node_modules public src-tauri tsconfig.node. json
[14:35:36] index.css package-lock. json python tailwind.config.js vite.config.ts
[14:35:36] jay@Qunix desktop % nvim python/core/base_agent.py eoe5$o Observer
[14:35:36] jay@Qunix desktop % nvim python/api.py
[14:35:36] jay@Qunix desktop %
[14:35:36] jay@Qunix desktop % Observer
[14:35:36] jay@Qunix desktop % nvim src/LogViewer.tsx
[14:35:36] jay@Qunix desktop % localhost:11434 Check Ollama Server
[14:35:36] jay@Qunix desktop % npm run build
[14:35:36] G Active Agents: 1 / Total: 3
[14:35:36] > @observer/desktop@d.1.@ build
[14:35:36] > tsc && vite build
[14:35:36] vite v6.1.0 building for production... : ss
[14:35:36] vy 1591 modules transformed. SimpleActivityAgent
[14:35:36] dist/index.html @.47 kB gzip: Q. stopped
[14:35:36] dist/assets/index—B9dsNGM7.css 6.31 kB | gzip: 1.
[14:35:36] dist/assets/index—au66u2rl.js 155.36 kB | gzip: 49.
[14:35:36] v built in 1.68s
[14:35:36] jay@Qunix desktop % npm run tauri dev
[14:35:36] Model: deepseek-r1:8b
[14:35:36] Tracks all activity
[14:35:36] > @observer/desktop@d.1.@ tauri
[14:35:36] > tauri dev
[14:35:36] \ Show Logs \ Show CoT
[14:35:36] Running DevCommand (‘cargo run --no-default-featu
[14:35:36] Info Watching /Users/jay/repos/Observer/desktop/sr
[14:35:36] Compiling observer v0.1.0 (/Users/jay/repos/Observe
[14:35:36] Finished ‘dev’ profile [unoptimized + debuginfo] t
[14:35:36] Running ‘target/debug/observer~
[14:35:36] CommandTrackingAgent
[14:35:36] AC stopped
[14:35:36] jay@Qunix desktop
[14:35:36] jay@Qunix desktop
[14:35:36] jay@Qunix desktop
[14:35:36] jay@Qunix desktop
[14:35:36] nvim python/core/base_agent.py
[14:35:36] oH Be
[14:35:36] npm run tauri dev
[14:35:36] > @observer/desktop@d.1.@ tauri
[14:35:36] > tauri dev
[14:35:36] Running DevCommand (‘cargo run --no-default-features -—-color always ——)
[14:35:36] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:35:36] Finished ‘dev’ profile [unoptimized + debuginfo] target(s) in @.29s
[14:35:36] Running ‘target/debug/observer~
[14:35:36] jay@Qunix desktop % npm run tauri dev
[14:35:36] > @observer/desktop@d.1.@ tauri
[14:35:36] > tauri dev
[14:35:36] Running DevCommand (‘cargo run --no-default-features -—-color always ——)
[14:35:36] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:35:36] Finished ‘dev’ profile [unoptimized + debuginfo] target(s) in @.37s
[14:35:36] Running ‘target/debug/observer~
[14:35:36] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x120e8be90>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:41] === BEGIN COT BLOCK ===
[14:35:41] === PROMPT ===
[14:35:41] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:35:41] Your task is to:
[14:35:41] 1. Analyze the current screen content
[14:35:41] 2. Determine if the user's activity has changed from the last recorded activity
[14:35:41] 3. Write a concise description of any new activity
[14:35:41] Available commands:
[14:35:41] WRITE_ACTIVITY: activity_description
[14:35:41] READ_LAST_ACTIVITY: None
[14:35:41] Guidelines for activity descriptions:
[14:35:41] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:35:41] - Focus on the main activity visible on screen
[14:35:41] - Include the application name when relevant
[14:35:41] - Don't include temporary or quick changes
[14:35:41] - Group similar activities together
[14:35:41] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:35:41] === SCREEN CONTENT ===
[14:35:41] 14f1004..13fc24a main -> main
[14:35:41] jay@Qunix Observer % cd desktop
[14:35:41] jay@Qunix desktop % ls
[14:35:41] app—icon. png index.html Observer
[14:35:41] dist node_modules
[14:35:41] index.css package-Lock. json
[14:35:41] jay@Qunix desktop % nvim python/core/base| Observer
[14:35:41] jay@Qunix desktop % nvim python/api.py
[14:35:41] jay@Qunix desktop
[14:35:41] jay@Qunix desktop
[14:35:41] jay@Qunix desktop
[14:35:41] jay@Qunix desktop
[14:35:41] jay@Qunix desktop
[14:35:41] localhost:11434 Check Ollama Server
[14:35:41] nvim src/LogViewer.ts G Active Agents: 1 / Total: 3
[14:35:41] dH de DP He
[14:35:41] npm run build
[14:35:41] > @observer/desktop@@.1.@ build SimpleActivity Agent
[14:35:41] > tsc & vite build
[14:35:41] stopped
[14:35:41] vite v6.1.0
[14:35:41] 1591 modules transformed. Model: deepseek-r1:8b
[14:35:41] dist/
[14:35:41] Tracks all activity
[14:35:41] arn
[14:35:41] @.47 |
[14:35:41] dist/assets/index—B9dsNGM7.css 6.31 |
[14:35:41] 5.36 |
[14:35:41] jay@Qunix desktop % npm run tauri dev
[14:35:41] \ Show Logs \ Show CoT
[14:35:41] > @observer/desktop@d.1.@ tauri
[14:35:41] > tauri dev
[14:35:41] TimestampAgent
[14:35:41] DevCommand (‘cargo run —-no-
[14:35:41] Watching /Users/jay/repos/Observ| amon
[14:35:41] observer v@.1.0 (/Users/jay/
[14:35:41] ‘dev’ profile [unoptimized +
[14:35:41] “target/debug/observer’
[14:35:41] AC Records all user activity on a file
[14:35:41] jay@Qunix desktop % nvim python/core/base
[14:35:41] jay@Qunix desktop
[14:35:41] jay@Qunix desktop
[14:35:41] npm run tauri dev Y showLogs | A Hide cot | CF
[14:35:41] [14:35:04]
[14:35:41] Model: deepseek-r1:7b
[14:35:41] oH &
[14:35:41] jay@Qunix desktop
[14:35:41] > @observer/desktop@d.1.@ tauri
[14:35:41] > tauri dev
[14:35:41] DevCommand (‘cargo run —-no-
[14:35:41] Watching /Users/jay/repos/Observ
[14:35:41] ‘dev’ profile [unoptimized +
[14:35:41] “target/debug/observer’
[14:35:41] jay@Qunix desktop % npm run tauri dev
[14:35:41] > @observer/desktop@d.1.@ tauri
[14:35:41] > tauri dev
[14:35:41] DevCommand (‘cargo run --no-default-features --color always —-*)
[14:35:41] Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:35:41] ‘dev’ profile [unoptimized + debuginfo] target(s) in @.37s
[14:35:41] “target/debug/observer’
[14:35:41] CommandTrackingAgent
[14:35:41] stopped
[14:35:41] Model: deepseek-r1:8b
[14:35:41] Tracks the CLI commands you use
[14:35:41] \ Show Logs \ Show CoT
[14:35:41] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x122bc0500>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:45] === BEGIN COT BLOCK ===
[14:35:45] === PROMPT ===
[14:35:45] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:35:45] Your task is to:
[14:35:45] 1. Analyze the current screen content
[14:35:45] 2. Determine if the user's activity has changed from the last recorded activity
[14:35:45] 3. Write a concise description of any new activity
[14:35:45] Available commands:
[14:35:45] WRITE_ACTIVITY: activity_description
[14:35:45] READ_LAST_ACTIVITY: None
[14:35:45] Guidelines for activity descriptions:
[14:35:45] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:35:45] - Focus on the main activity visible on screen
[14:35:45] - Include the application name when relevant
[14:35:45] - Don't include temporary or quick changes
[14:35:45] - Group similar activities together
[14:35:45] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:35:45] === SCREEN CONTENT ===
[14:35:45] 14f1004..13fc24a main -—> main
[14:35:45] jay@Qunix Observer % cd desktop
[14:35:45] jay@Qunix desktop % 1s
[14:35:45] app—icon. png index.html Observer
[14:35:45] dist node_modules
[14:35:45] index.css package-Lock. json
[14:35:45] nvim python/core/base Observer
[14:35:45] nvim python/api. py
[14:35:45] jay@Qunix desktop
[14:35:45] jay@Qunix desktop
[14:35:45] jay@Qunix desktop
[14:35:45] jay@Qunix desktop
[14:35:45] jay@Qunix desktop
[14:35:45] jay@Qunix desktop
[14:35:45] jay@Qunix desktop
[14:35:45] localhost:11434 Check Ollama Server
[14:35:45] nvim src/LogViewer.ts CG Active Agents: 1 / Total: 3
[14:35:45] dH de DP He
[14:35:45] npm run build
[14:35:45] > @observer/desktop@@.1.@ build SimpleActivityA gent CommandTrackingA gent
[14:35:45] > tsc && vite build
[14:35:45] stopped stopped
[14:35:45] vite v6.1.0
[14:35:45] . 1591 modules transformed. Model: deepseek-r1:8b Model: deepseek-r1:8b
[14:35:45] dist/
[14:35:45] Tracks all activity Tracks the CLI commands you use
[14:35:45] orn
[14:35:45] xx
[14:35:45] 0.4
[14:35:45] dist/assets/index—B9dsNGM7.css 6.3
[14:35:45] dist/assets/index—au66u2rl.js 155.3
[14:35:45] jay@Qunix desktop % npm run tauri dev
[14:35:45] > @observer/desktop@d.1.@ tauri
[14:35:45] > tauri dev
[14:35:45] Timest
[14:35:45] DevCommand (‘cargo run —-no-
[14:35:45] Watching /Users/jay/repos/Observ| running
[14:35:45] observer v@.1.0 (/Users/jay/
[14:35:45] ‘dev’ profile [unoptimized +
[14:35:45] “target/debug/observer’
[14:35:45] AC Records all user activity on a file
[14:35:45] jay@Qunix desktop % nvim python/core/base
[14:35:45] jay@Qunix desktop
[14:35:45] jay@Qunix desktop
[14:35:45] jay@Qunix desktop
[14:35:45] Model: deepseek-r1:7b
[14:35:45] oH &
[14:35:45] npm run tauri dev Y showLogs | A Hide cot | CF
[14:35:45] ; [14:35:04]
[14:35:45] > @observer/desktop@d.1.@ tauri
[14:35:45] > tauri dev
[14:35:45] DevCommand (‘cargo run —-no-
[14:35:45] Watching /Users/jay/repos/Observ
[14:35:45] ‘dev’ profile [unoptimized +
[14:35:45] “target/debug/observer’
[14:35:45] jay@Qunix desktop % npm run tauri dev
[14:35:45] > @observer/desktop@d.1.@ tauri
[14:35:45] > tauri dev
[14:35:45] DevCommand (‘cargo run --no-default-features --color always —-*)
[14:35:45] Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:35:45] ‘dev’ profile [unoptimized + debuginfo] target(s) in @.37s
[14:35:45] “target/debug/observer’
[14:35:45] Error in observation loop: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/generate (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x122bc3440>: Failed to establish a new connection: [Errno 61] Connection refused'))
[14:35:48] Error in observation loop: (-2, 'Estimating resolution as 368')
[14:36:27] === BEGIN COT BLOCK ===
[14:36:27] === PROMPT ===
[14:36:27] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:36:27] Your task is to:
[14:36:27] 1. Analyze the current screen content
[14:36:27] 2. Determine if the user's activity has changed from the last recorded activity
[14:36:27] 3. Write a concise description of any new activity
[14:36:27] Available commands:
[14:36:27] WRITE_ACTIVITY: activity_description
[14:36:27] READ_LAST_ACTIVITY: None
[14:36:27] Guidelines for activity descriptions:
[14:36:27] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:36:27] - Focus on the main activity visible on screen
[14:36:27] - Include the application name when relevant
[14:36:27] - Don't include temporary or quick changes
[14:36:27] - Group similar activities together
[14:36:27] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:36:27] === SCREEN CONTENT ===
[14:36:27] 1471004. .13fc24a main —> main
[14:36:27] jay@Qunix Observer % cd desktop
[14:36:27] jay@Qunix desktop % 1s
[14:36:27] app-icon.png index.html Observer
[14:36:27] dist node_modules
[14:36:27] index.css package-Lock. json
[14:36:27] jay@Qunix desktop % nvim python/core/base| Observer
[14:36:27] jay@Qunix desktop % nvim python/api.py
[14:36:27] jay@Qunix des ktop 10.0.0.72:11434 v Connected
[14:36:27] jay@Qunix desktop
[14:36:27] jay@Qunix desktop % nvim src/LogViewer.ts CG Active Agents: 0 / Total: 3
[14:36:27] jay@Qunix desktop
[14:36:27] jay@Qunix desktop npm run build
[14:36:27] > @observer/desktop@0.1.@ build SimpleActivity Agent CommandTrackingAgent
[14:36:27] > tsc & vite build
[14:36:27] stopped stopped
[14:36:27] vite v6.1.0 building for production...
[14:36:27] ‘ . aoe mogures J rans fo rmed . Model: deepseek-r1:8b Model: deepseek-r1:8b
[14:36:27] 1s index. m
[14:36:27] dist/assets/
[14:36:27] dist/assets/index—au66u2rl.js
[14:36:27] vy built in 1.68s
[14:36:27] jay@Qunix desktop % npm run tauri dev
[14:36:27] Tracks all activity Tracks the CLI commands you use
[14:36:27] \ Show Logs \ Show CoT \ Show Logs \ Show CoT
[14:36:27] > @observer/desktop@d.1.@ tauri
[14:36:27] > tauri dev
[14:36:27] Running DevCommand (‘cargo run —-no-| TimestampAgent
[14:36:27] Info Watching /Users/jay/repos/Observ| stopped
[14:36:27] Compiling observer v0.1.0 (/Users/jay/
[14:36:27] Finished ‘dev’ profile [unoptimized +
[14:36:27] Running ‘target/debug/observer Model: deepseek-11:7b
[14:36:27] AC Records all user activity on a file
[14:36:27] jay@Qunix desktop % nvim python/core/base
[14:36:27] jay@Qunix desktop
[14:36:27] jay@Qunix desktop
[14:36:27] jay@Qunix desktop npm run tauri dev Y showLogs | A Hide cot | CF
[14:36:27] [14:35:04]
[14:36:27] > @observer/desktop@d.1.@ tauri (*2)
[14:36:27] > tauri dev [14:35:12]
[14:36:27] Running DevCommand (‘cargo run ——no-| ane
[14:36:27] Info Watching /Users/jay/repos/Observ
[14:36:27] Finished ‘dev’ profile [unoptimized +
[14:36:27] Running ‘target/debug/observer~
[14:36:27] jay@Qunix desktop % npm run tauri dev
[14:36:27] > @observer/desktop@d.1.@ tauri
[14:36:27] > tauri dev
[14:36:27] Running DevCommand (‘cargo run --no-default-features --color always ——)
[14:36:27] Info Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:36:27] Finished ‘dev’ profile [unoptimized + debuginfo] target(s) in @.37s
[14:36:27] Running ‘target/debug/observer~
[14:36:27] Error in observation loop: API error: {"error":"model 'deepseek-r1:7b' not found"}
[14:36:31] === BEGIN COT BLOCK ===
[14:36:31] === PROMPT ===
[14:36:31] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:36:31] Your task is to:
[14:36:31] 1. Analyze the current screen content
[14:36:31] 2. Determine if the user's activity has changed from the last recorded activity
[14:36:31] 3. Write a concise description of any new activity
[14:36:31] Available commands:
[14:36:31] WRITE_ACTIVITY: activity_description
[14:36:31] READ_LAST_ACTIVITY: None
[14:36:31] Guidelines for activity descriptions:
[14:36:31] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:36:31] - Focus on the main activity visible on screen
[14:36:31] - Include the application name when relevant
[14:36:31] - Don't include temporary or quick changes
[14:36:31] - Group similar activities together
[14:36:31] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:36:31] === SCREEN CONTENT ===
[14:36:31] 14f1004..13fc24a main -—> main
[14:36:31] jay@Qunix Observer % cd desktop
[14:36:31] jay@Qunix desktop % 1s
[14:36:31] app—icon. png index.html Observer
[14:36:31] dist node_modules
[14:36:31] index.css package-Lock. json
[14:36:31] nvim python/core/base Observer
[14:36:31] nvim python/api. py
[14:36:31] jay@Qunix desktop
[14:36:31] jay@Qunix desktop
[14:36:31] jay@Qunix desktop
[14:36:31] jay@Qunix desktop
[14:36:31] jay@Qunix desktop
[14:36:31] jay@Qunix desktop
[14:36:31] jay@Qunix desktop
[14:36:31] 10.0.0.72:11434 v Connected
[14:36:31] nvim src/LogViewer.ts CG Active Agents: 1 / Total: 3
[14:36:31] dH de DP He
[14:36:31] npm run build
[14:36:31] > @observer/desktop@d.1.@ build SimpleA tivity Agent
[14:36:31] > tsc && vite build
[14:36:31] stopped
[14:36:31] vite v6.1.0
[14:36:31] 1591 modules transformed. Model: deepseek-r1:8b
[14:36:31] dist/
[14:36:31] Tracks all activity
[14:36:31] arn
[14:36:31] @.47 |
[14:36:31] dist/assets/index—B9dsNGM7.css 6.31 |
[14:36:31] 5.36 |
[14:36:31] Pouilt ini.68s >
[14:36:31] jay@Qunix desktop % npm run tauri dev
[14:36:31] \ Show Logs \ Show CoT
[14:36:31] > @observer/desktop@d.1.@ tauri
[14:36:31] > tauri dev
[14:36:31] TimestampAgent
[14:36:31] DevCommand (‘cargo run —-no-
[14:36:31] Watching /Users/jay/repos/Observ| funding
[14:36:31] observer v@.1.0 (/Users/jay/
[14:36:31] ‘dev’ profile [unoptimized +
[14:36:31] . ta rget/debug/observer’ Model: deepseek-r1:7b
[14:36:31] AC Records all user activity on a file
[14:36:31] jay@Qunix desktop
[14:36:31] jay@Qunix desktop
[14:36:31] npm run tauri dev Y showLogs | A Hide cot | CF
[14:36:31] [14:35:04]
[14:36:31] oH &
[14:36:31] jay@Qunix desktop
[14:36:31] > @observer/desktop@d.1.@ tauri
[14:36:31] > tauri dev
[14:36:31] DevCommand (‘cargo run —-no-
[14:36:31] Watching /Users/jay/repos/Observ
[14:36:31] ‘dev’ profile [unoptimized +
[14:36:31] “target/debug/observer’
[14:36:31] jay@Qunix desktop % npm run tauri dev
[14:36:31] > @observer/desktop@d.1.@ tauri
[14:36:31] > tauri dev
[14:36:31] DevCommand (‘cargo run --no-default-features --color always —-*)
[14:36:31] Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:36:31] ‘dev’ profile [unoptimized + debuginfo] target(s) in @.37s
[14:36:31] “target/debug/observer’
[14:36:31] CommandTrackingAgent
[14:36:31] stopped
[14:36:31] Model: deepseek-r1:8b
[14:36:31] Tracks the CLI commands you use
[14:36:31] \ Show Logs \ Show CoT
[14:36:32] Error in observation loop: API error: {"error":"model 'deepseek-r1:7b' not found"}
[14:36:41] === BEGIN COT BLOCK ===
[14:36:41] === PROMPT ===
[14:36:41] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:36:41] Your task is to:
[14:36:41] 1. Analyze the current screen content
[14:36:41] 2. Determine if the user's activity has changed from the last recorded activity
[14:36:41] 3. Write a concise description of any new activity
[14:36:41] Available commands:
[14:36:41] WRITE_ACTIVITY: activity_description
[14:36:41] READ_LAST_ACTIVITY: None
[14:36:41] Guidelines for activity descriptions:
[14:36:41] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:36:41] - Focus on the main activity visible on screen
[14:36:41] - Include the application name when relevant
[14:36:41] - Don't include temporary or quick changes
[14:36:41] - Group similar activities together
[14:36:41] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:36:41] === SCREEN CONTENT ===
[14:36:41] return {"status": "“updated"}
[14:36:41] except Exception as e:
[14:36:41] logger.error(f"Error updating agent config: {e}")
[14:36:41] return {"error": f"Failed to update agent configuration: {str(e)}"}
[14:36:41] 337 @app.get("/agents/{agent_id}/logs")
[14:36:41] async def get_agent_logs(agent_id: str, days: int = 1):
[14:36:41] """Get agent logs for the specified number of past days"™""
[14:36:41] try:
[14:36:41] # Calculate the date range
[14:36:41] end_date = datetime.now()
[14:36:41] start_date = end_date — timedelta(days=days)
[14:36:41] # Get the agent's data directory
[14:36:41] agent_dir = Path(__file__).parent / "agents" / agent_id / "data"
[14:36:41] if not agent_dir.exists():
[14:36:41] return {"error": "Agent logs directory not found"}
[14:36:41] # Find all log files in the date range
[14:36:41] log_files = []
[14:36:41] for date in (start_date + timedelta(n) for n in range(days + 1)):
[14:36:41] log_file = agent_dir / f"log_{date.strftime('%sY%m%d')}.txt"
[14:36:41] if log_file.exists():
[14:36:41] log_files.append(log_file)
[14:36:41] # Read and parse logs
[14:36:41] logs = []
[14:36:41] current_timestamp = None
[14:36:41] think_content = []
[14:36:41] recording_think = False
[14:36:41] for log_file in log_files:
[14:36:41] with open(log_file, 'r') as f:
[14:36:41] content = f.read()
[14:36:41] # Find all timestamp lines and their positions
[14:36:41] timestamp_matches = list(re.finditer(r'\[([\d:]+)\]', content) )
[14:36:41] for i, match in enumerate(timestamp_matches) :
[14:36:41] timestamp = match.group(1)
[14:36:41] start_pos = match.end()
[14:36:41] end_pos = timestamp_matches[i + 1].start() if i + 1 < len(timestamp_mat
[14:36:41] ches) else len(content)
[14:36:41] # Get the text block for this timestamp
[14:36:41] block = content [start_pos:end_pos] .strip()
[14:36:41] # Check if this block contains any think tags
[14:36:41] think_match = re.search(r'<think>(.*?)</think>', block, re.DOTALL)
[14:36:41] if think_match:
[14:36:41] logs.append({
[14:36:41] "timestamp': timestamp,
[14:36:41] 'message': think_match.group(1).strip(),
[14:36:41] "type': ‘cot’
[14:36:41] })
[14:36:41] =zsh
[14:36:41] 2592 lines yanked into "+
[14:36:41] 2025-02-17 14:36:27,247 — DEBUG — http://10.0.@.72:11434 "POST /api/generate H
[14:36:41] TTP/1.1" 404 44
[14:36:41] Generation error: API error: {"error":"model 'deepseek-r1:7b' not found"}
[14:36:41] 2025-02-17 14:36:28,462 — DEBUG — Incoming request from origin: http://127.0.0
[14:36:41] .1:1430
[14:36:41] 2025-02-17 14:36:28,462 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:36:41] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:36:41] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:36:41] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:36:41] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:36:41] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:36:41] 2025-02-17 14:36:28,465 - DEBUG - Response headers: MutableHeaders({'content-1l
[14:36:41] ength': '169', ‘content-type': ‘application/json', ‘access—control—allow-crede
[14:36:41] ntials': 'true', 'access—control—expose-headers': '*', 'access—control-—allow-o
[14:36:41] rigin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:36:41] INFO: 127.0.0.1:49620 —- "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:36:41] 200 OK
[14:36:41] 2025-02-17 14:36:28,591 — DEBUG — STREAM b'IHDR' 16 13
[14:36:41] 2025-02-17 14:36:28,591 — DEBUG — STREAM b'IDAT' 41 534556
[14:36:41] 2025-02-17 14:36:29,382 -— DEBUG - ['tesseract', '/var/folders/d4/t8w2dg017r155
[14:36:41] blc2p4kk3800000gn/T/tess_b71f4hti_input.PNG', '/var/folders/d4/t8w2dg@17r155bl
[14:36:41] c2p4kk3800000gn/T/tess_b71f4hti', ‘txt']
[14:36:41] 2025-02-17 14:36:30,464 - DEBUG - Incoming request from origin: http://127.0.0
[14:36:41] .1:1430
[14:36:41] 2025-02-17 14:36:30,464 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:36:41] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:36:41] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:36:41] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:36:41] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:36:41] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:36:41] 2025-02-17 14:36:30,467 - DEBUG - Response headers: MutableHeaders({'content-1
[14:36:41] ength': '169', ‘content-type': ‘application/json', ‘access—control—allow-crede
[14:36:41] ntials': 'true', 'access—control—expose-headers': '*', 'access—control-—allow-o
[14:36:41] rigin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:36:41] INFO: 127.0.0.1:49620 —- "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:36:41] 200 OK
[14:36:41] 2025-02-17 14:36:31,876 — DEBUG - Starting new HTTP connection (1): 10.0.0.72:
[14:36:41] 11434
[14:36:41] 2025-02-17 14:36:32,465 — DEBUG — Incoming request from origin: http://127.0.0
[14:36:41] .1:1430
[14:36:41] 2025-02-17 14:36:32,465 - DEBUG - Request headers: Headers({'host': ‘localhost
[14:36:41] :8000', ‘accept': '*/*', 'origin': 'http://127.0.0.1:1430', 'accept—encoding':
[14:36:41] "gzip, deflate', 'connection': 'keep-alive', 'sec-fetch-mode': ‘'cors', 'sec-f
[14:36:41] etch-site': 'cross-site', 'user-agent': 'Mozilla/5.@ (Macintosh; Intel Mac 0S
[14:36:41] X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)', 'referer': 'http://127.0
[14:36:41] -@.1:1430/', 'sec-fetch-dest': ‘empty', 'accept-language': 'en-US,en;q=0.9'})
[14:36:41] 2025-02-17 14:36:32,470 - DEBUG - Response headers: MutableHeaders({'content-1
[14:36:41] ength': '169', ‘content-type': ‘application/json', ‘access—control—allow-crede
[14:36:41] ntials': 'true', 'access—control—expose-headers': '*', 'access—control-—allow-o
[14:36:41] rigin': 'http://127.0.0.1:1430', 'vary': 'Origin'})
[14:36:41] INFO: 127.0.0.1:49620 —- "GET /agents/timestamp_agent/logs?days=1 HTTP/1.1"
[14:36:41] 200 OK
[14:36:41] 2025-02-17 14:36:32,583 - DEBUG - http://10.0.@.72:11434 "POST /api/generate H
[14:36:41] TTP/1.1" 404 44
[14:36:41] Generation error: API error: {"error":"model 'deepseek-r1:7b' not found"}
[14:36:41] Gl python @ 100 =
[14:36:41] i
[14:36:41] Error in observation loop: API error: {"error":"model 'deepseek-r1:7b' not found"}
[14:36:45] === BEGIN COT BLOCK ===
[14:36:45] === PROMPT ===
[14:36:45] You are an activity tracking assistant that analyzes screen content to understand what the user is doing.
[14:36:45] Your task is to:
[14:36:45] 1. Analyze the current screen content
[14:36:45] 2. Determine if the user's activity has changed from the last recorded activity
[14:36:45] 3. Write a concise description of any new activity
[14:36:45] Available commands:
[14:36:45] WRITE_ACTIVITY: activity_description
[14:36:45] READ_LAST_ACTIVITY: None
[14:36:45] Guidelines for activity descriptions:
[14:36:45] - Be concise but descriptive (e.g., "Writing code in VS Code", "Browsing web in Chrome")
[14:36:45] - Focus on the main activity visible on screen
[14:36:45] - Include the application name when relevant
[14:36:45] - Don't include temporary or quick changes
[14:36:45] - Group similar activities together
[14:36:45] Remember: Only record new activities when there's a significant change in what the user is doing.
[14:36:45] === SCREEN CONTENT ===
[14:36:45] 14f1004..13fc24a main -—> main
[14:36:45] jay@Qunix Observer % cd desktop
[14:36:45] jay@Qunix desktop % 1s
[14:36:45] app—icon. png index.html Observer
[14:36:45] dist node_modules
[14:36:45] index.css package-Lock. json
[14:36:45] nvim python/core/base Observer
[14:36:45] nvim python/api. py
[14:36:45] jay@Qunix desktop
[14:36:45] jay@Qunix desktop
[14:36:45] jay@Qunix desktop
[14:36:45] jay@Qunix desktop
[14:36:45] jay@Qunix desktop
[14:36:45] jay@Qunix desktop
[14:36:45] jay@Qunix desktop
[14:36:45] 10.0.0.72:11434 v Connected
[14:36:45] nvim src/LogViewer.ts CG Active Agents: 1 / Total: 3
[14:36:45] dH de DP He
[14:36:45] npm run build
[14:36:45] > @observer/desktop@d.1.@ build SimpleA tivity Agent
[14:36:45] > tsc && vite build
[14:36:45] stopped
[14:36:45] vite v6.1.0
[14:36:45] 1591 modules transformed. Model: deepseek-r1:8b
[14:36:45] dist/
[14:36:45] Tracks all activity
[14:36:45] arn
[14:36:45] @.47 |
[14:36:45] dist/assets/index—B9dsNGM7.css 6.31 |
[14:36:45] 5.36 |
[14:36:45] Pouilt ini.68s >
[14:36:45] jay@Qunix desktop % npm run tauri dev
[14:36:45] \ Show Logs \ Show CoT
[14:36:45] > @observer/desktop@d.1.@ tauri
[14:36:45] > tauri dev
[14:36:45] TimestampAgent
[14:36:45] DevCommand (‘cargo run —-no-
[14:36:45] Watching /Users/jay/repos/Observ| funding
[14:36:45] observer v@.1.0 (/Users/jay/
[14:36:45] ‘dev’ profile [unoptimized +
[14:36:45] . ta rget/debug/observer’ Model: deepseek-r1:7b
[14:36:45] AC Records all user activity on a file
[14:36:45] jay@Qunix desktop
[14:36:45] jay@Qunix desktop
[14:36:45] npm run tauri dev A Hide Logs || YW Show cot || CY
[14:36:45] jay@Qunix desktop
[14:36:45] oH &
[14:36:45] No logs available
[14:36:45] > @observer/desktop@d.1.@ tauri
[14:36:45] > tauri dev
[14:36:45] DevCommand (‘cargo run —-no-
[14:36:45] Watching /Users/jay/repos/Observ
[14:36:45] ‘dev’ profile [unoptimized +
[14:36:45] “target/debug/observer’
[14:36:45] jay@Qunix desktop % npm run tauri dev
[14:36:45] > @observer/desktop@d.1.@ tauri
[14:36:45] > tauri dev
[14:36:45] DevCommand (‘cargo run --no-default-features --color always —-*)
[14:36:45] Watching /Users/jay/repos/Observer/desktop/src-tauri for changes...
[14:36:45] ‘dev’ profile [unoptimized + debuginfo] target(s) in @.37s
[14:36:45] “target/debug/observer’
[14:36:45] CommandTrackingAgent
[14:36:45] stopped
[14:36:45] Model: deepseek-r1:8b
[14:36:45] Tracks the CLI commands you use
[14:36:45] \ Show Logs \ Show CoT
[14:36:45] Error in observation loop: API error: {"error":"model 'deepseek-r1:7b' not found"}
