; supervisord.conf
[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid

[program:print_startup_info]
command=/usr/local/bin/print_info.sh
autostart=true
autorestart=false ; Do not restart after it exits
startsecs=0       ; Consider it started immediately
priority=100      ; Lower priority, run it relatively early
stdout_logfile=/dev/stdout ; Send its output directly to supervisor's stdout
stdout_logfile_maxbytes=0  ; Keep all output
stderr_logfile=/dev/stderr ; Send its errors directly to supervisor's stderr
stderr_logfile_maxbytes=0

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/nginx_stdout.log
stderr_logfile=/var/log/supervisor/nginx_stderr.log

[program:observer_proxy]
command=observer-ollama --no-start # Keep --no-start if you don't want it to try and launch ollama
                        # For this super-simple setup, your script WILL try to connect to localhost:11434
                        # and potentially try to start it if check_ollama_running fails and auto_start is true.
                        # Let's keep it as is for now, it will fail to *start* ollama, but then should connect.
                        # OR, to be cleaner, add --no-start
; command=observer-ollama --no-start # This is probably better to prevent errors if localhost:11434 isn't immediately up
directory=/opt/observer-ollama
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/observer_proxy_stdout.log
stderr_logfile=/var/log/supervisor/observer_proxy_stderr.log
